#include <iostream>
#include <string>

void displayArray(std::string* array, int size) {
    for (int i = 0; i < size; ++i) {
        std::cout << array[i] << " ";
    }
    std::cout << std::endl;
}

std::string* addEntry(std::string* dynamicArray, int& size, const std::string& newEntry) {
    
    std::string* newArray = new std::string[size + 1];
    
    
    for (int i = 0; i < size; ++i) {
        newArray[i] = dynamicArray[i];
    }

    
    newArray[size] = newEntry;

    
    size++;

    
    delete[] dynamicArray;

    return newArray;
}

std::string* deleteEntry(std::string* dynamicArray, int& size, const std::string& entryToDelete) {
    
    int indexToDelete = -1;
    for (int i = 0; i < size; ++i) {
        if (dynamicArray[i] == entryToDelete) {
            indexToDelete = i;
            break;
        }
    }

    
    if (indexToDelete == -1) {
        std::cout << "Entry not found!" << std::endl;
        return dynamicArray;
    }

    
    std::string* newArray = new std::string[size - 1];

    
    for (int i = 0, j = 0; i < size; ++i) {
        if (i != indexToDelete) {
            newArray[j++] = dynamicArray[i];
        }
    }

    
    size--;

    
    delete[] dynamicArray;

    return newArray;
}

int main() {
    int size = 5;
    
    std::string* dynamicArray = new std::string[size]{"Amy", "Alex", "Felix", "Dexter", "Eve"};

    std::cout << "Initial array: ";
    displayArray(dynamicArray, size);

    
    dynamicArray = addEntry(dynamicArray, size, "Frank");
    std::cout << "After adding 'Frank': ";
    displayArray(dynamicArray, size);

    
    dynamicArray = addEntry(dynamicArray, size, "Grace");
    std::cout << "After adding 'Grace': ";
    displayArray(dynamicArray, size);

    
    dynamicArray = deleteEntry(dynamicArray, size, "Felix");
    std::cout << "After deleting 'Felix': ";
    displayArray(dynamicArray, size);

    
    dynamicArray = deleteEntry(dynamicArray, size, "Zara");
    std::cout << "After attempting to delete 'Zara': ";
    displayArray(dynamicArray, size);

    
    delete[] dynamicArray;

    return 0;
}
